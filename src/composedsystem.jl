using ModelingToolkit, Plots, DifferentialEquations

global p1values = (6.5e8, 6.502333483510963e8, 6.509927011676681e8, 6.500699226211126e8, 6.481636521330743e8, 6.462950068407283e8, 6.467377686196828e8, 6.499284699398841e8, 6.56143495549747e8, 6.646086627697779e8, 6.760600496838462e8, 6.909085978214407e8, 7.024344401407735e8, 7.215765537170146e8, 7.416371986586959e8, 7.672194171851695e8, 7.96285786428535e8, 8.249151736242313e8, 8.638430375755112e8, 9.079193676161125e8, 9.50931342096424e8, 9.905820530699109e8, 1.0292299627677568e9, 1.0682044603792368e9, 1.1086420840492e9, 1.1529424647135448e9, 1.195603823078922e9, 1.2355258145015092e9, 1.2745573362509594e9, 1.30768396643799e9, 1.3427863465726357e9, 1.3965056423213978e9, 1.4546595923812938e9, 1.517184132093395e9, 1.5719029701222322e9, 1.624193723416844e9, 1.6722579866550393e9, 1.714479512565067e9, 1.7514987581283605e9, 1.7847348016501913e9, 1.8252768153702755e9, 1.8673361809703782e9, 1.9058391886041684e9, 1.930429914140894e9, 1.9423912698492894e9, 1.9341562983718076e9, 1.9018297364293125e9, 1.834425306373071e9, 1.753702071383942e9, 1.687916686414426e9, 1.6362962801582012e9, 1.5818754258928149e9, 1.5207018176254907e9, 1.4675180647069838e9, 1.4264096902614474e9, 1.392694543490107e9, 1.369059812587442e9, 1.3484015226672845e9, 1.330004068288233e9, 1.3146218326113508e9, 1.3018866020745227e9, 1.2938788197028162e9, 1.289699183111896e9, 1.286690869637622e9, 1.2774425415164945e9, 1.2646676013066912e9, 1.2433729222978792e9, 1.2228492807496617e9, 1.2168581558384213e9)
global p2values = (7.0e8, 7.009118021961325e8, 7.035254670287337e8, 7.070979008939462e8, 7.092160299830465e8, 7.130815117939763e8, 7.188769841019199e8, 7.248862226304119e8, 7.327219201759008e8, 7.41939644752167e8, 7.539241872130858e8, 7.694084409454097e8, 7.814221390182133e8, 8.013918715492913e8, 8.224018059656912e8, 8.493904299566352e8, 8.804719128201816e8, 9.115835782912291e8, 9.462663545504203e8, 9.85616095843072e8, 1.0286476936976169e9, 1.0704643355958817e9, 1.1126020744273221e9, 1.1563938316468117e9, 1.2027219190684273e9, 1.2555517014007714e9, 1.3081329897125783e9, 1.3589591615146108e9, 1.4098370008641267e9, 1.4547149339155107e9, 1.5044616928848605e9, 1.5828599088666608e9, 1.6705141255428557e9, 1.7696201340348756e9, 1.8611685529268162e9, 1.9521825058992977e9, 2.0384023931401913e9, 2.117524278883497e9, 2.1907869605823646e9, 2.2612277727954082e9, 2.354204485314456e9, 2.454611563991526e9, 2.5603201474506593e9, 2.6615349974824443e9, 2.758120305947311e9, 2.8406588843251805e9, 2.910577086180977e9, 2.95419251031961e9, 2.972936499156142e9, 2.967918257422935e9, 2.945248669450322e9, 2.898508048995803e9, 2.8178219568727274e9, 2.7198878369960127e9, 2.6222817312953606e9, 2.5288438356779404e9, 2.4447476901791253e9, 2.3572766449641395e9, 2.273053371432935e9, 2.1914027145272083e9, 2.113272645686389e9, 2.0452061186360972e9, 1.9792621292985528e9, 1.920162821909767e9, 1.8710289697203102e9, 1.831459615931357e9, 1.7795090021293035e9, 1.7349270952574234e9, 1.7221699568974044e9)
global p3values = (1.9e8, 1.9100315393320823e8, 1.938495592754856e8, 1.9768552580782607e8, 2.0000545810085523e8, 2.0431653841882113e8, 2.1077167383202717e8, 2.1719370392349285e8, 2.2491538101893112e8, 2.3301361568674266e8, 2.4218941361462164e8, 2.5236168030545193e8, 2.5932402453868333e8, 2.696917484527345e8, 2.795445159412281e8, 2.912833289445344e8, 3.0408853007982767e8, 3.164745305707602e8, 3.309212681013315e8, 3.471533331853045e8, 3.642769597950153e8, 3.8073336762951213e8, 3.97314231274109e8, 4.146172612343283e8, 4.330955422611088e8, 4.5429531536224157e8, 4.7561608160978895e8, 4.96458468150674e8, 5.176262456262578e8, 5.36522451453013e8, 5.577298354237438e8, 5.918191234641466e8, 6.307637221332321e8, 6.758196235852969e8, 7.185241229997462e8, 7.620842512085525e8, 8.043159478486419e8, 8.439134515361443e8, 8.81375074255523e8, 9.182134646093282e8, 9.682746844139874e8, 1.0242573426984429e9, 1.085533690749167e9, 1.1474042320837042e9, 1.210287046301255e9, 1.2686498255052636e9, 1.3242971458738072e9, 1.369555127207353e9, 1.4059073322922206e9, 1.4311066267547002e9, 1.442938673233192e9, 1.4388938085701687e9, 1.4134008099316375e9, 1.3714305005986984e9, 1.3224482501047785e9, 1.2696417711384287e9, 1.2187150295215893e9, 1.162992327037373e9, 1.1072963627394347e9, 1.0515171293784604e9, 9.9660893934231e8, 9.477045238675517e8, 8.990316100166475e8, 8.540643704416938e8, 8.163066470746014e8, 7.868321776432049e8, 7.501143836438456e8, 7.204501426932536e8, 7.122472153785357e8)
global p4values = (6.0e7, 6.038334358010974e7, 6.1495762164342575e7, 6.305224084250623e7, 6.402542597138652e7, 6.589830265304354e7, 6.886006678807196e7, 7.199164706240991e7, 7.598889964725824e7, 8.042256230289112e7, 8.567763454857868e7, 9.16638328805449e7, 9.577371827367231e7, 1.0179067062647444e8, 1.07305503482756e8, 1.1357249443170236e8, 1.2012663288746527e8, 1.2635249336553165e8, 1.3411249902959232e8, 1.4323757039033347e8, 1.5265539161270174e8, 1.6156478808017805e8, 1.7046702845192692e8, 1.797552299510244e8, 1.8970237645444307e8, 2.013593140758592e8, 2.1336118045235625e8, 2.2532635056538802e8, 2.3778684664569062e8, 2.4908136909211612e8, 2.619042845393424e8, 2.829790348131583e8, 3.0759831867880833e8, 3.36690188555959e8, 3.650332476094689e8, 3.948373225911463e8, 4.2428886924645394e8, 4.522584221411962e8, 4.791205169729528e8, 5.0598159742459184e8, 5.433139795232561e8, 5.863752586675794e8, 6.352977186903291e8, 6.866984702087507e8, 7.412536273992466e8, 7.943223568371339e8, 8.468048419195696e8, 8.900976817110338e8, 9.261416661461831e8, 9.531759374666308e8, 9.68305377394028e8, 9.645545816892751e8, 9.352753115927731e8, 8.891234066184745e8, 8.384885173007187e8, 7.879770976091048e8, 7.418167559643126e8, 6.932509163424608e8, 6.462760250895615e8, 6.002904274870192e8, 5.558712903070966e8, 5.170246078553115e8, 4.789330711185387e8, 4.441444959178449e8, 4.157887203358254e8, 3.942033531348282e8, 3.679608848016652e8, 3.4743854414059967e8, 3.418805011680686e8)

function interpolate(x, y, xs)
    expanded_xs = LinRange(xs[1], xs[2], xs[3])
    if (x < expanded_xs[1])
        return y[1]
    end
    if (x > expanded_xs[length(expanded_xs)])
        return y[length(expanded_xs)]
    end
    li = LinearInterpolation(expanded_xs, collect(y))
    return li(x)
end

@register interpolate(x, y::NTuple, xs::Tuple)

@variables t
D = Differential(t)

function Interpolator(; name, values, mint, maxt, steps)
    # function Interpolator(; name)
    @variables f(t)
    eqs = [f ~ interpolate(t, values, (mint, maxt, steps))]
    # eqs = [D(f) ~ 1]
    ODESystem(eqs, t, [f,], []; name)
end

function Population(; name)
    @variables f(t)
    ODESystem(Equation[], t, [f,], []; name)
end

function connect_pop(p, p1, p2)
    [p.f ~ p1.f + p2.f]
end
@named p1 = Interpolator(values=p1values, mint=1900.0, maxt=2100.0, steps=69)
@named p2 = Interpolator(values=p2values, mint=1900.0, maxt=2100.0, steps=69)
# @named p3 = Interpolator(values=p3values, mint=1900.0, maxt=2100.0, steps=69)
# @named p4 = Interpolator(values=p4values, mint=1900.0, maxt=2100.0, steps=69)
# @named p1 = Interpolator()
# @named p2 = Interpolator()
# @named p3 = Interpolator(m=3)
# @named p4 = Interpolator(m=4)
@named p = Population()

eqs = connect_pop(p, p1, p2)

@named _model = ODESystem(eqs, t, [p.f, p1.f, p2.f,], [])
@named model = compose(_model, p, p1, p2)
println(equations(model))
sys = structural_simplify(model)
# println(observed(sys))

# prob = ODEProblem(sys, [], (1900.0, 2100.0), [])
# sol = solve(prob)
plot(vars=[p.f])