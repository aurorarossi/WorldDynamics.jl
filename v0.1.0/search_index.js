var documenterSearchIndex = {"docs":
[{"location":"source/#Source-code-documentation","page":"Source code documentation","title":"Source code documentation","text":"","category":"section"},{"location":"source/#WorldDynamics-constants","page":"Source code documentation","title":"WorldDynamics constants","text":"","category":"section"},{"location":"source/","page":"Source code documentation","title":"Source code documentation","text":"Modules = [WorldDynamics]\nOrder   = [:constant]","category":"page"},{"location":"source/#WorldDynamics-functions","page":"Source code documentation","title":"WorldDynamics functions","text":"","category":"section"},{"location":"source/#Functions-in-functions.jl","page":"Source code documentation","title":"Functions in functions.jl","text":"","category":"section"},{"location":"source/","page":"Source code documentation","title":"Source code documentation","text":"This functions correspond to DYNAMO functions used in the World3 model.","category":"page"},{"location":"source/","page":"Source code documentation","title":"Source code documentation","text":"Modules = [WorldDynamics]\nOrder   = [:function]\nPages   = [\"functions.jl\"]","category":"page"},{"location":"source/#WorldDynamics.clip-NTuple{4, Any}","page":"Source code documentation","title":"WorldDynamics.clip","text":"clip(f1, f2, va, th)\n\nReturn f1 if the value v is greater than the threshold th, f2 otherwise. This function correspond to the CLIP (also called FIFGE) function in the DYNAMO language.\n\n\n\n\n\n","category":"method"},{"location":"source/#WorldDynamics.interpolate-Tuple{Any, Tuple{Vararg{Float64, N} where N}, Tuple{Float64, Float64}}","page":"Source code documentation","title":"WorldDynamics.interpolate","text":"interpolate(x, y, xs)\n\nReturn the value of a function with input x, by linearly interpolating the function itself through the table y and the range xs. If x is out of the range, the value at the corresponding extremity is returned. This function correspond to the TABHL function in the DYNAMO language. This latter function receives a table (that is, y), a value (that is, x), a left and a right extreme of an interval (that is, xs), and an increment value.\n\n\n\n\n\n","category":"method"},{"location":"source/#WorldDynamics.step-Tuple{Any, Any, Any}","page":"Source code documentation","title":"WorldDynamics.step","text":"step(t, hght, sttm)\n\nReturn 0 if the value t is smaller than the threshold sttm, hght otherwise. This function correspond to the STEP function in the DYNAMO language.\n\n\n\n\n\n","category":"method"},{"location":"source/#WorldDynamics.switch-Tuple{Any, Any, Any}","page":"Source code documentation","title":"WorldDynamics.switch","text":"switch(v1, v2, z)\n\nReturn v1 if the value z is approximately 0 with tolerance 1e-16, v2 otherwise. This function correspond to the SWITCH (also called FIFZE) function in the DYNAMO language.\n\n\n\n\n\n","category":"method"},{"location":"source/#Functions-in-plotvariables.jl","page":"Source code documentation","title":"Functions in plotvariables.jl","text":"","category":"section"},{"location":"source/","page":"Source code documentation","title":"Source code documentation","text":"Modules = [WorldDynamics]\nOrder   = [:function]\nPages   = [\"plotvariables.jl\"]","category":"page"},{"location":"source/#WorldDynamics.plotvariables-Tuple{Any, Any, Vector{var\"#s9\"} where var\"#s9\"<:NTuple{4, Any}}","page":"Source code documentation","title":"WorldDynamics.plotvariables","text":"plotvariables(solution, xrange, variables::Vector{<:NTuple{4, Any}}; name=\"\", showaxis=false, showlegend=true, linetype=\"lines\", colored=false)\n\nPlot the values of the variables in the vector variables obtained by the ODE system solution (normally, obtained by using the solve function in solvesystems.jl) in the specified xrange interval. For each variable, the vector variables includes a quadruple, containing the Julia variable, its range, and its symbolic name to be shown in the plot.\n\n\n\n\n\n","category":"method"},{"location":"source/#Functions-in-solvesystems.jl","page":"Source code documentation","title":"Functions in solvesystems.jl","text":"","category":"section"},{"location":"source/","page":"Source code documentation","title":"Source code documentation","text":"Modules = [WorldDynamics]\nOrder   = [:function]\nPages   = [\"solvesystems.jl\"]","category":"page"},{"location":"source/#WorldDynamics.compose-Tuple{Vector{ModelingToolkit.ODESystem}, Vector{Symbolics.Equation}}","page":"Source code documentation","title":"WorldDynamics.compose","text":"compose(systems::Vector{ODESystem}, connection_eqs::Vector{Equation})\n\nReturn the ODE system obtained by composing the ODE systems in the vector systems and by making use of the variable equalities in connection_eqs. Normally, each ODE systems in systems corresponds to a subsystem of a system in the World3 model, and the variable equalities specify which variables are shared between the subsystems.\n\n\n\n\n\n","category":"method"},{"location":"source/#WorldDynamics.solve-Tuple{ModelingToolkit.ODESystem, Any}","page":"Source code documentation","title":"WorldDynamics.solve","text":"solve(system::ODESystem, timespan; solver=Tsit5())\n\nReturn the solution of the system ODE system in the timespan interval (for the available different ODE system solvers, see the documentation of DifferentialEquations.jl).\n\n\n\n\n\n","category":"method"},{"location":"world3/#eqs_vars_pars","page":"World 3 equations, variables, and parameters","title":"World 3 equations, variables, and parameters","text":"","category":"section"},{"location":"world3/","page":"World 3 equations, variables, and parameters","title":"World 3 equations, variables, and parameters","text":"In this page we list the equations, the variables and the parameters of the World3 model as described in Appendices A and B of the book Dynamics of growth in a finite world (1974) (our code also implement the model corresponding to each system of the entire World3 model as described in Chapter 2, 3, 4, 5, and 6 of the book, but we do not list here the equations, the variables and the parameters of each such model).","category":"page"},{"location":"world3/#Equations","page":"World 3 equations, variables, and parameters","title":"Equations","text":"","category":"section"},{"location":"world3/","page":"World 3 equations, variables, and parameters","title":"World 3 equations, variables, and parameters","text":"Name Definition Reference Notes\nPopulation fracdmathttpopdt=mathttb-mathttd lines 1-3, page 167 \nDeaths per year mathttd=fracmathttpopmathttle line 4, page 167 mathttdr in our code\nCrude death rate mathttcdr=1000timesfracmathttdmathttpop line 5, page 167 \nLife expectancy mathttle=mathttlentimesmathttlmftimesmathttlmhstimesmathttlmptimesmathttlmc lines 6-7, page 167 \n5 mathttlmf=mathitinterpolateleft(fracmathttfpcmathttsfpcright) lines 8-10, page 167 \n6 mathtthsapc=mathitinterpolateleft(mathttsopcright) lines 11-12, page 167 \n7 fracdmathttehspcdt=fracmathtthsapc-mathttehspcmathtthsid lines 13-14, page 167 \n8 $ \\mathtt{lmhs}=clip(\\mathtt{lmhs2},\\mathtt{lmhs1},t,\\mathtt{iphst}) $ lines 15-16, page 167 \n9 mathttlmhs1=mathitinterpolate(mathttehspc) lines 17-18, page 167 \n10 mathttlmhs2=mathitinterpolate(mathttehspc) lines 19-20, page 167 \n11 mathttfpu=mathitinterpolate(mathttpop) lines 21-22, page 167 \n12 mathttcmi=mathitinterpolate(mathttiopc) lines 23-24, page 167 \n13 mathttlmc=1-mathttcmitimesmathttfpu line 25, page 167 \n14 mathttlmp=mathitinterpolate(mathttppolx) lines 26-27, page 167 \nBirths per year $ \\mathtt{b}=clip(\\mathtt{d},\\mathtt{tf}\\times\\mathtt{pop}\\times\\mathtt{ffw}/\\mathtt{rlt},t,\\mathtt{pet}) $ lines 28-31, page 168 mathttbr in our code\n16 mathttcbr=1000timesfracmathttbmathttpop line 32, page 168 \n17 mathttlmp=mathitmin(mathttmtf mathttmtftimes(1-mathttfce)+mathttdtftimesmathttfce) line 33, page 168 \n18 mathttmtf=mathttmtfntimesmathttfm lines 34-35, page 168 \n19 mathttfm=mathitinterpolate(mathttle) lines 36-37, page 168 \n20 mathttdtf=mathttdcfstimesmathttcmple lines 38, page 168 \n21 mathttcmple=mathitinterpolate(mathttple) lines 39-40, page 168 \n22.1 fracdmathttpledt=3timesfracmathttple2-mathttplemathttlpd lines 41-42, page 168 \n2nd lev. delay eq. for mathttple fracdmathttple1dt=3timesfracmathttle-mathttple1mathttlpd lines 41-42, page 168 \n2nd lev. delay eq. for mathttple fracdmathttple2dt=3timesfracmathttple1-mathttple2mathttlpd lines 41-42, page 168 \n23 $ \\mathtt{dcfs}=clip(2,\\mathtt{dcfsn}\\times\\mathtt{frsn}\\times\\mathtt{sfsn},t,\\mathtt{zpgt}) $ lines 43-45, page 168 \n24 mathttsfsn=mathitinterpolate(mathttdiopc) lines 46-47, page 168 \n25.1 fracdmathttdiopcdt=3timesfracmathttdiopc2-mathttdiopcmathttsad lines 48-49, page 168 \n25.2 fracdmathttdiopc2dt=3timesfracmathttdiopc1-mathttdiopc2mathttsad lines 48-49, page 168 \n25.3 fracdmathttdiopc1dt=3timesfracmathttiopc-mathttdiopc1mathttsad lines 48-49, page 168 \n26 mathttfrsn=mathitinterpolate(mathttfie) lines 50-52, page 168 \n27 mathttfie=(mathttiopc-mathttaiopc)mathttaiopc line 53, page 168 \n28 fracdmathttaiopcdt=fracmathttiopc-mathttaiopcmathttieat lines 54-55, page 168 \n29 mathttnfc=fracmathttmtfmathttdtf-1 line 56, page 168 \n30 $ \\mathtt{fce}=clip(1,\\mathit{interpolate}(\\mathtt{fcfpc}),t,\\mathtt{fcest}) $ lines 57-59, page 168 \n31.1 fracdmathttfcfpcdt=3timesfracmathttfcfpc2-mathttfcfpcmathtthsid line 60, page 168 \n31.2 fracdmathttfcfpc2dt=3timesfracmathttfcfpc1-mathttfcfpc2mathtthsid line 60, page 168 \n31.3 fracdmathttfcfpc1dt=3timesfracmathttfcapc-mathttfcfpc1mathtthsid line 60, page 168 \n32 mathttfcapc=mathttfsafctimesmathttsopc line 61, page 168 \n33 mathttfsafc=mathitinterpolate(mathttnfc) lines 62-63, page 168 \n34 mathttiopc=07e11times e^mathttlttimes0037mathttpop lines 64-72, page 168 \n35 mathttppolx=10 lines 73-75, page 168 \n36 mathttsopc=15e11times e^mathttlttimes0030mathttpop lines 76-82, page 168 \n37 mathttfpc=4e11times e^mathttlttimes0020mathttpop lines 83-89, page 168 ","category":"page"},{"location":"world3/#Initializations","page":"World 3 equations, variables, and parameters","title":"Initializations","text":"","category":"section"},{"location":"world3/","page":"World 3 equations, variables, and parameters","title":"World 3 equations, variables, and parameters","text":"Name Initialization\nAgricultural inputs mathttai(0) = 5e9\nArable land mathttal(0) = 9e8\nAverage industrial output per capita mathttaiopc(0) = mathttiopc(0)\nCapital utilization fraction mathttcuf(0) = 1\nDelayed industrial output per capita mathttdiopc(0) = mathttiopc(0)\n mathttdiopc2(0) = mathttiopc(0)\n mathttdiopc1(0) = mathttiopc(0)\nEffective health services per capita mathttehspc(0)=mathtthsapc(0)\nFamily response to social norm mathttfrsn(0)=082\nFertility control facilities per capita mathttfcfpc(0) = mathttfcapc(0)\n mathttfcfpc2(0) = mathttfcapc(0)\n mathttfcfpc1(0) = mathttfcapc(0)\nIndustrial capital mathttic(0)=21e11\nLabor utilization fraction delay mathttlufd(0)=10\nLand fertility mathttlfert(0)=600\nFraction of the population age 0-14 mathttp1(0)=65e7\nFraction of the population age 15-44 mathttp2(0)=70e7\nFraction of the population age 45-64 mathttp3(0)=19e7\nFraction of the population age 65+ mathttp4(0)=6e7\nPerceived food ratio mathttpfr(0)=1\nPopulation mathttpop(0)=161e9\nPotentially arable land mathttpal(0) = 23e9\nPerceived life expectancy mathttple(0) = mathttle(0)\n mathttple1(0) = mathttle(0)\n mathttple2(0) = mathttle(0)\nPersistent pollution mathttppol(0) = 25e7\nIndex of persistent pollution mathttppolx(0) = 10\nService capital mathttsc(0) = 144e11\nUrban-industrial land mathttuil(0) = 82e6","category":"page"},{"location":"world3/#Variable-and-(ODE)-subsystem-correspondance","page":"World 3 equations, variables, and parameters","title":"Variable and (ODE) subsystem correspondance","text":"","category":"section"},{"location":"world3/","page":"World 3 equations, variables, and parameters","title":"World 3 equations, variables, and parameters","text":"# Variable Main subsystem Other subsystems\n1 pop population land_development, land_erosion_urban_industrial_use, industrial_subsector, service_subsector, non_renewable, persistent_pollution, birth_rate, death_rate\n2 p1 population \n3 p2 population job_subsector\n4 p3 population job_subsector\n5 p4 population \n6 d1 population \n7 d2 population \n8 d3 population \n9 d4 population \n10 m1 population \n11 m2 population \n12 m3 population \n13 m4 population \n14 mat1 population \n15 mat2 population \n16 mat3 population \n17 dr death_rate population\n18 cdr death_rate \n19 le death_rate birth_rate,population\n20 lmf death_rate \n21 hsapc death_rate \n22 ehspc death_rate \n23 lmhs death_rate \n24 lmhs1 death_rate \n25 lmhs2 death_rate \n26 fpu death_rate \n27 cmi death_rate \n28 lmc death_rate \n29 lmp death_rate \n30 br birth_rate population\n31 cbr birth_rate \n32 tf birth_rate population\n33 mtf birth_rate \n34 fm birth_rate \n35 dtf birth_rate \n36 cmple birth_rate \n37 ple birth_rate \n ple1 birth_rate \n ple2 birth_rate \n38 dcfs birth_rate \n39 sfsn birth_rate \n40 diopc birth_rate \n diopc1 birth_rate \n diopc2 birth_rate \n41 frsn birth_rate \n42 fie birth_rate \n43 aiopc birth_rate \n44 nfc birth_rate \n45 fce birth_rate \n46 fcfpc birth_rate \n fcfpc1 birth_rate \n fcfpc2 birth_rate \n47 fcapc birth_rate \n48 fsafc birth_rate \n49 iopc industrial_subsector land_development, land_erosion_urban_industrial_use, job_subsector, service_subsector, non_renewable, birth_rate, death_rate\n50 io industrial_subsector agricultural_inputs, land_development, service_subsector, supplementary_equations\n51 icor industrial_subsector \n52 ic industrial_subsector job_subsector\n53 icdr industrial_subsector \n54 alic industrial_subsector \n55 icir industrial_subsector \n56 fioai industrial_subsector \n57 fioac industrial_subsector \n58 fioacc industrial_subsector \n59 fioacv industrial_subsector \n60 isopc service_subsector \n61 isopc1 service_subsector \n62 isopc2 service_subsector \n63 fioas service_subsector industrial_subsector\n64 fioas1 service_subsector \n65 fioas2 service_subsector \n66 scir service_subsector \n67 sc service_subsector job_subsector\n68 scdr service_subsector \n69 alsc service_subsector \n70 so service_subsector supplementary_equations\n71 sopc service_subsector job_subsector, birth_rate, death_rate\n72 scor service_subsector \n73 j job_subsector \n74 pjis job_subsector \n75 jpicu job_subsector \n76 pjss job_subsector \n77 jpscu job_subsector \n78 pjas job_subsector \n79 jph job_subsector \n80 lf job_subsector \n81 luf job_subsector \n82 lufd job_subsector \n83 cuf job_subsector industrial_subsector, service_subsector\n84 lfc land_development \n85 al land_development agricultural_inputs, land_erosion_urban_industrial_use, job_subsector, persistent_pollution\n86 pal land_development \n87 f land_development supplementary_equations\n88 fpc land_development discontinuing_land_maintenance, death_rate\n89 ifpc land_development \n90 ifpc1 land_development \n91 ifpc2 land_development \n92 tai land_development agricultural_inputs\n93 fioaa land_development industrial_subsector\n94 fioaa1 land_development \n95 fioaa2 land_development \n96 ldr land_development \n97 dcph land_development investment_allocation_decision\n98 cai agricultural_inputs \n99 ai agricultural_inputs \n100 alai agricultural_inputs investment_allocation_decision\n101 aiph agricultural_inputs investment_allocation_decision, job_subsector, persistent_pollution\n102 lymc agricultural_inputs investment_allocation_decision\n103 ly agricultural_inputs investment_allocation_decision, land_development, land_erosion_urban_industrial_use\n104 lyf agricultural_inputs \n105 lymap agricultural_inputs \n106 lymap1 agricultural_inputs \n107 lymap2 agricultural_inputs \n108 fiald agricultural_inputs investment_allocation_decision , land_development\n109 mpld investment_allocation_decision \n110 mpai investment_allocation_decision \n111 mlymc investment_allocation_decision \n112 all land_erosion_urban_industrial_use \n113 llmy land_erosion_urban_industrial_use \n114 llmy1 land_erosion_urban_industrial_use \n115 llmy2 land_erosion_urban_industrial_use \n116 ler land_erosion_urban_industrial_use land_development\n117 uilpc land_erosion_urban_industrial_use \n118 uilr land_erosion_urban_industrial_use \n119 lrui land_erosion_urban_industrial_use land_development\n120 uil land_erosion_urban_industrial_use \n121 lfert land_fertility_degradation agricultural_inputs, land_fertility_regeneration\n122 lfdr land_fertility_degradation \n123 lfd land_fertility_degradation \n124 lfr land_fertility_regeneration land_fertility_degradation\n125 lfrt land_fertility_regeneration \n126 falm discontinuing_land_maintenance agricultural_inputs, land_fertility_regeneration\n127 fr discontinuing_land_maintenance \n128 pfr discontinuing_land_maintenance \n129 nr non_renewable \n130 nrur non_renewable \n131 nruf non_renewable \n132 pcrum non_renewable persistent_pollution\n133 nrfr non_renewable \n134 fcaor non_renewable industrial_subsector\n135 fcaor1 non_renewable \n136 fcaor2 non_renewable \n137 ppgr persistent_pollution \n138 ppgf persistent_pollution \n ppgf2 persistent_pollution \n ppgf22 persistent_pollution adaptive_technological_control_cards\n139 ppgio persistent_pollution \n140 ppgao persistent_pollution \n141 ppapr persistent_pollution \n ppapr1 persistent_pollution \n ppapr2 persistent_pollution \n ppapr3 persistent_pollution \n pptd persistent_pollution \n142 ppol persistent_pollution \n143 ppolx persistent_pollution land_fertility_degradation, pollution_damage, death_rate\n144 ppasr persistent_pollution \n145 ahlm persistent_pollution \n146 ahl persistent_pollution \n ppgf221 adaptive_technological_control_cards \n ppgf222 adaptive_technological_control_cards \n pcti adaptive_technological_control_cards \n plmp adaptive_technological_control_cards \n plmp1 adaptive_technological_control_cards \n plmp2 adaptive_technological_control_cards \n pctcm adaptive_technological_control_cards \n pctir adaptive_technological_control_cards \n lmp pollution_damage adaptive_technological_control_cards\n lmp1 pollution_damage \n lmp2 pollution_damage \n lfdr pollution_damage \n lfdr1 pollution_damage \n lfdr2 pollution_damage \n147 foa supplementary_equations \n148 foi supplementary_equations \n149 fos supplementary_equations ","category":"page"},{"location":"world3/#Parameters","page":"World 3 equations, variables, and parameters","title":"Parameters","text":"","category":"section"},{"location":"world3/","page":"World 3 equations, variables, and parameters","title":"World 3 equations, variables, and parameters","text":"Name Value System\nmathttahl70 15 Pollution\nmathttai 5e9 Agriculture\nmathttal 9e8 Agriculture\nmathttalic 14 NonRenewable\nmathttalic1 14 Capital\nmathttalic2 14 Capital\nmathttalsc1 20 Capital\nmathttalsc2 20 Capital\nmathttamti 1 Pollution\nmathttcfood 250 Population\nmathttcio 100 Population\nmathttcso 150 Population\nmathttdcfsn 4 Population\nmathttfcest 4000 Population\nmathttffw 021 Population\nmathttfioaa 012 NonRenewable\nmathttfioac 043 NonRenewable\nmathttfioac1 043 Capital\nmathttfioac2 043 Capital\nmathttfioas 012 NonRenewable\nmathttfipm 0001 Pollution\nmathttfrpm 002 Pollution\nmathttgc 0012 NonRenewable\nmathtthsid 20 Population\nmathtticor 3 NonRenewable\nmathtticor1 3 Capital\nmathtticor2 3 Capital\nmathttieat 3 Population\nmathttiet 4000 Capital\nmathttimef 01 Pollution\nmathttimti 10 Pollution\nmathttiopcd 400 Capital\nmathttiphst 1940 Population\nmathttlen 28 Population\nmathttlfert 600 Agriculture\nmathttlfpf 075 Capital\nmathttlpd 20 Population\nmathttlt 2400 Population\nmathttlt2 2400 Population\nmathttlufdt 2 Capital\nmathttmtfn 12 Population\nmathttnri 1e12 NonRenewable\nmathttnruf1 1 NonRenewable\nmathttnruf2 1 NonRenewable\nmathttpal 23e9 Agriculture\nmathttpcti 1 Pollution\nmathttpd 5 Pollution\nmathttpet 4000 Population\nmathttpfr 1 Agriculture\nmathttpop2 4e9 NonRenewable\nmathttpopi 165e9 NonRenewable\nmathttppgf1 1 Pollution\nmathttppgf21 1 Pollution\nmathttppol70 136e8 Pollution\nmathttpptd1 20 Pollution\nmathttpptd2 20 Pollution\nmathttps 0 Population\nmathttpt 1910 Population\nmathttpyear 1975 NonRenewable\nmathttpyear 1975 Pollution\nmathttpyear 4000 Capital\nmathttrlt 30 Population\nmathttsad 20 Population\nmathttscor1 1 Capital\nmathttscor2 1 Capital\nmathttsfpc 230 Population\nmathttswat 0 Pollution\nmathtttdd 10 Pollution\nmathttuil 82e6 Agriculture\nmathttzpgt 2500 NonRenewable\nmathttzpgt 4000 Population","category":"page"},{"location":"world3/#Tables-and-ranges","page":"World 3 equations, variables, and parameters","title":"Tables and ranges","text":"","category":"section"},{"location":"world3/","page":"World 3 equations, variables, and parameters","title":"World 3 equations, variables, and parameters","text":"Variable name Table Range System\nmathttifpc1 (2300 4800 6900 8500 9700 10700 11500 12100 12500) (0 1600) Agriculture\nmathttifpc2 (2300 4800 6900 8500 9700 10700 11500 12100 12500) (0 1600) Agriculture\nmathttfioaa1 (04 02 01 0025 00 00) (00 25) Agriculture\nmathttfioaa2 (04 02 01 0025 00 00) (00 25) Agriculture\nmathttdcph (1000000 74000 52000 35000 24000 15000 7500 3000 1500 750 500) (0 1) Agriculture\nmathttlymc (10 30 38 44 49 54 57 60 63 66 69 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100) (0 1000) Agriculture\nmathttlymap1 (10 10 07 04) (0 30) Agriculture\nmathttlymap2 (10 10 07 04) (0 30) Agriculture\nmathttfiald (00 005 015 03 05 07 085 095 10) (0 2) Agriculture\nmathttmlymc (0075 003 0015 0011 0009 0009 0007 0006 0005 0005 0005 0005 0005 0005 0005 0005) (0 600) Agriculture\nmathttllmy1 (12 10 063 036 016 0055 004 0025 0015 001) (0 9) Agriculture\nmathttllmy2 (12 10 063 036 016 0055 004 0025 0015 001) (0 9) Agriculture\nmathttuilpc (0005 0008 0015 0025 004 0055 007 008 009) (0 1600) Agriculture\nmathttlfdr (00 01 03 05) (0 30) Agriculture\nmathttlfrt (200 130 80 40 20 20) (0 01) Agriculture\nmathttfalm (00 004 007 009 01) (0 4) Agriculture\nmathttfioaa (01 01 01 01 01 01 01 01 01 01) (1900 2000) Capital\nmathttfioas2 (03 02 01 005 00) (0 2) Capital\nmathttfioas1 (03 02 01 005 00) (0 2) Capital\nmathttisopc1 (400 3000 6400 10000 12200 14500 16500 18000 20000) (0 1600) Capital\nmathttisopc2 (400 3000 6400 10000 12200 14500 16500 18000 20000) (0 1600) Capital\nmathttfioacv (03 032 034 036 038 043 073 077 081 082 083) (0 2) Capital\nmathttcuf (10 09 07 03 01 01) (1 11) Capital\nmathttjpicu (037 018 012 009 007 006) (50 800) Capital\nmathttjph (20 05 04 03 027 024 02 02) (2 30) Capital\nmathttaiph (50 110 210 340 580 860 1230 610 230 80 30) (1900 2100) Capital\nmathttal (90 100 110 130 160 200 230 240 240 240 240) (1900 2100) Capital\nmathttjpscu (11 06 035 02 015 015) (50 800) Capital\nmathttpop (165 173 18 21 23 255 30 365 40 46 515) (1900 2000) Capital\nmathttfcaor (005 005 005 005 005 005 005 005 005 005 005) (1900 2000) Capital\nmathttpcrum (00 085 26 44 54 62 68 70 70) (0 1600) NonRenewable\nmathttfcaor1 (10 09 07 05 02 01 005 005 005 005 005) (0 1) NonRenewable\nmathttfcaor2 (10 09 07 05 02 01 005 005 005 005 005) (0 1) NonRenewable\nmathttahlm (10 110 210 310 410) (1 1001) Pollution\nmathttpcrum (170 300 520 780 1380 2800 4800 6600 7000 7000 7000) (1900 2100) Pollution\nmathttpop (160 190 220 310 420 530 670 860 1090 1390 1760) (1900 2100) Pollution\nmathttaiph (66 110 200 340 570 970 1680 2900 4950 8450 14650) (1900 2100) Pollution\nmathttal (90 100 110 130 160 200 240 260 270 270 270) (1900 2100) Pollution\nmathttpctcm (00 -005) (0 01) Pollution\nmathttlmp1 (10 099 097 095 090 085 075 065 055 040 020) (0 100) Pollution\nmathttlmp2 (10 099 097 095 090 085 075 065 055 040 020) (0 100) Pollution\nmathttlfdr1 (00 01 03 05) (0 30) Pollution\nmathttlfdr2 (00 01 03 05) (0 30) Pollution\nmathttcmi (05 005 -01 -008 -002 005 01 015 02) (0 1600) Population\nmathttfpu (00 02 04 05 058 065 072 078 08) (0 16e9) Population\nmathtthsapc (00 200 500 950 1400 1750 2000 2200 2300) (00 20000) Population\nmathttlmf (00 10 12 13 135 14) (00 50) Population\nmathttlmhs1 (10 11 14 16 17 18) (00 1000) Population\nmathttlmhs2 (10 14 16 18 195 20) (00 1000) Population\nmathttlmp (10 099 097 095 09 085 075 065 055 04 02) (00 1000) Population\nmathttfm (00 02 04 06 08 09 10 105 11) (00 800) Population\nmathttcmple (30 21 16 14 13 12 11 105 10) (00 800) Population\nmathttsfsn (125 10 09 08 075) (00 8000) Population\nmathttfrsn (05 06 07 085 10) (-02 02) Population\nmathttfce (075 085 09 095 098 099 10) (00 30) Population\nmathttfsafc (00 0005 0015 0025 003 0035) (00 100) Population\nmathttm1 (00567 00366 00243 00155 00082 00023 0001) (20 80) Population\nmathttm2 (00266 00171 00110 00065 00040 00016 00008) (20 80) Population\nmathttm3 (00562 00373 00252 00171 00118 00083 0006) (20 80) Population\nmathttm4 (013 011 009 007 006 005 004) (20 80) Population","category":"page"},{"location":"#Table-of-contents","page":"Home","title":"Table of contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"tutorial.md\", \"world3.md\", \"source.md\"]\nDepth = 6","category":"page"},{"location":"#WorldDynamics.jl","page":"Home","title":"WorldDynamics.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"An open-source framework written in Julia for world dynamics modeling and simulation.","category":"page"},{"location":"#The-World-Dynamics-Project","page":"Home","title":"The World Dynamics Project","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The World Dynamics project aims to provide a modern framework to investigate models of global dynamics focused on sustainable development based on current software engineering and scientific machine learning techniques. Our group is developing a Julia library to allow scientists to easily use and adapt different world models, from Meadows et al.'s World3 to recent proposals. By enabling an open, interdisciplinary, and consistent comparative approach to scientific model development, our goal is to supply high-quality information to global policy making on environmental and economic issues.","category":"page"},{"location":"#Index-of-functions","page":"Home","title":"Index of functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages   = [\"source.md\"]\nModules = [WorldDynamics]\nOrder   = [:function]","category":"page"},{"location":"tutorial/#A-WorldDynamics-tutorial","page":"WorldDynamics tutorial","title":"A WorldDynamics tutorial","text":"","category":"section"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"WorldDynamics allows the user to play with the World3 model introduced in the book Dynamics of Growth in a Finite World (1974). Informally speaking, this model is formed by five systems, each containg one or more subsystems. The following picture shows the structure of the model and the connections between the subsystems which share a common variable.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"(Image: The World3 model)","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"As it can be seen, the five systems are Pop4 (which is the population system with four age levels), Agriculture, Capital, Non-renewable (resources), and Pollution. The Pop4 system is formed by the three subsystems pop (population), br (birth rate), and dr (death rate). For instance, the subsystem br uses the variable pop which originates from the subsystem pop, while the subsystem pop uses the variable le which originates from the subsystem dr. Of course, there are variables which connect subsystem of different systems. For example, the subsystem pp of the system Pollution uses the variable aiph which originates from the subsystem ai of the system Agriculture (for an entire list of variables and of subsystems using them see the World 3 equations, variables, and parameters page).","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"In WorldDynamics each system is a Julia module and each subsystem correspond to a Julia function of this module (or of a module which is included in this module), which defines the ODE system corresponding to the subsystem itself. All the ODE systems corresponding to the subsystems of the World3 model have to be composed (see the function compose in the solvesystems.jl code file). This will produce the entire ODE system of the World3 model, which can then be solved by using the function solve in the solvesystems.jl code file.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"Let us now see how we can replicate the runs described in Chapter 7 of the above mentioned book. ","category":"page"},{"location":"tutorial/#Replicating-historical-runs","page":"WorldDynamics tutorial","title":"Replicating historical runs","text":"","category":"section"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"We first have to solve the World3 ODE system, which is constructed in the world3_historicalrun function, included in the world3_historicalrun.jl code file.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"using WorldDynamics\ninclude(\"examples/scenarios/world3_historicalrun.jl\")\nsystem = world3_historicalrun()\nsol = WorldDynamics.solve(system, (1900, 2100))","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"We then have to define the variables that we want to plot. For example, Figure 7-2 of the above book shows the plot of eleven variables in the population system of the model. In order to easily access to these variables, we first create shortcuts to the subsystems in which they are introduced.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"@named pop = WorldDynamics.World3.Pop4.population()\n@named br = WorldDynamics.World3.Pop4.birth_rate()\n@named dr = WorldDynamics.World3.Pop4.death_rate()","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"The eleven variables are then defined as follows.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"fig_7_2_variables = [\n    (pop.pop, 0, 4e9, \"pop\"),\n    (br.cbr, 0, 50, \"cbr\"),\n    (dr.cdr, 0, 50, \"cdr\"),\n    (dr.le, 0, 60, \"le\"),\n    (dr.lmf, 0.75, 1.75, \"lmf\"),\n    (dr.lmp, 0.75, 1.75, \"lmp\"),\n    (dr.lmhs, 0.75, 1.75, \"lmhs\"),\n    (dr.lmc, 0.75, 1.75, \"lmc\"),\n    (br.tf, 0, 8, \"tf\"),\n    (br.dtf, 0, 8, \"dtf\"),\n]\n@variables t","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"For each variable of the model, the above vector includes a quadruple, containing the Julia variable, its range, and its symbolic name to be shown in the plot (the range and the symbolic name are optional). The time variable t has also to be declared.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"Finally, we can plot the evolution of the model variables according to the previously computed solution.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"plotvariables(sol, (t, 1900, 1970), fig_7_2_variables, name=\"Fig. 7-2\", showlegend=true, colored=true)","category":"page"},{"location":"tutorial/#Replicating-the-reference-behaviour","page":"WorldDynamics tutorial","title":"Replicating the reference behaviour","text":"","category":"section"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"To replicate the figures in Section 7.3 of the above book, we can operate in a similar way by declaring the varibales to be plot and by changing the time range. For example the following code reproduce the plot of Figure 7-7.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"@named pop = WorldDynamics.World3.Pop4.population()\n@named br = WorldDynamics.World3.Pop4.birth_rate()\n@named dr = WorldDynamics.World3.Pop4.death_rate()\n@named is = WorldDynamics.World3.Capital.industrial_subsector()\n@named ld = WorldDynamics.World3.Agriculture.land_development()\n@named nr = WorldDynamics.World3.NonRenewable.non_renewable()\n@named pp = WorldDynamics.World3.Pollution.persistent_pollution()\nreference_variables = [\n    (nr.nrfr, 0, 1, \"nrfr\"),\n    (is.iopc, 0, 1000, \"iopc\"),\n    (ld.fpc, 0, 1000, \"fpc\"),\n    (pop.pop, 0, 16e9, \"pop\"),\n    (pp.ppolx, 0, 32, \"ppolx\"),\n    (br.cbr, 0, 50, \"cbr\"),\n    (dr.cdr, 0, 50, \"cdr\"),\n]\n@variables t\nplotvariables(sol, (t, 1900, 2100), reference_variables, name=\"Fig. 7-7\", showlegend=true, colored=true)","category":"page"},{"location":"tutorial/#Replicating-the-sensitivity-tests","page":"WorldDynamics tutorial","title":"Replicating the sensitivity tests","text":"","category":"section"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"In this case, we have to mdoify the parameter or the interpolation table of the varaible with respect to which we want to perform the sensistivity test, we have to solve agian the ODE system, and we can finally plot the resulting evolution of the system.","category":"page"},{"location":"tutorial/#Modifying-a-parameter","page":"WorldDynamics tutorial","title":"Modifying a parameter","text":"","category":"section"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"In order to reproduce Figure 7-10, in which the nonrenewable resources initial value (that is, the value of the NRI parameter) is doubled, we can modify the value of this parameter by getting the parameter set of the nonrenewable resources sector, and by changing the value of NRI.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"nonrenewable_parameters_7_10 = WorldDynamics.World3.NonRenewable.getparameters()\nnonrenewable_parameters_7_10[:nri] = 2.0 * nonrenewable_parameters_7_10[:nri]","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"We then have to solve again the ODE system, by specifying which set of paramer values has to be used for the nonrenewable resources sector.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"system = world3_historicalrun(nonrenewable_params=nonrenewable_parameters_7_10)\nsol = WorldDynamics.solve(system, (1900, 2100))","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"Finally, we can plot the seven variables of Figure 7-10.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"plotvariables(sol, (t, 1900, 2100), reference_variables, name=\"Fig. 7-10\", showlegend=true, colored=true)","category":"page"},{"location":"tutorial/#Modifying-an-interpolation-table","page":"WorldDynamics tutorial","title":"Modifying an interpolation table","text":"","category":"section"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"In order to reproduce Figure 7-13, in which the slope of the fraction of industrial output allocated to agriculture is increased, we can modify the two tables FIOAA1 and FIOAA2 by getting the table set of the agriculture sector, and by changing the value of these two tables.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"agriculture_tables_7_13 = WorldDynamics.World3.Agriculture.gettables()\nagriculture_tables_7_13[:fioaa1] = (0.5, 0.3, 0.1, 0.0, 0.0, 0.0)\nagriculture_tables_7_13[:fioaa2] = (0.5, 0.3, 0.1, 0.0, 0.0, 0.0)","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"We then have to solve again the ODE system, by specifying which set of tables has to be used for the agriculture sector.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"system = world3_historicalrun(agriculture_tables=agriculture_tables_7_13)\nsol = WorldDynamics.solve(system, (1900, 2100))","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"Finally, we can plot the seven variables of Figure 7-10.","category":"page"},{"location":"tutorial/","page":"WorldDynamics tutorial","title":"WorldDynamics tutorial","text":"plotvariables(sol, (t, 1900, 2100), reference_variables, name=\"Fig. 7-13\", showlegend=true, colored=true)","category":"page"}]
}
